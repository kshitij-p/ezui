{"styles/globals.css":"@tailwind base;\n@tailwind components;\n@tailwind utilities;\n\n@layer base {\n  /* Light Mode Vars */\n  :root {\n    --background: 0 0% 100%; /* Body's bg color */\n    --foreground: 222 47% 11%; /* Default text color */\n\n    --paper: 0 0% 100%; /*  Used for the bg colors of comps */\n\n    --muted: 240 5% 93%; /* Used for big/primary muted blocks */\n    --muted-text: 220 6% 50%; /* Used for faint/disabled els text color */\n\n    --light-text: 240 4% 46%; /* Used for light text such as descriptions */\n\n    --card: 0 0% 100%; /* Used for cards */\n\n    --primary: 175 80% 40%; /* Used for primary button and other primary variants */\n    --border: 175 84% 32%; /* Used for bold borders i.e. bright and/or colorful */\n\n    --border-light: 175 6% 90%; /* Used for light borders */\n\n    --separator: 0 0% 83%; /* Used for separators */\n\n    --ring: 175 84% 38%; /* Used for tailwind focus ring */\n\n    --accent: 175 61% 34%; /* Used for selected states, hovered states */\n\n    --scroll-thumb: 0 0% 64%; /* Scrollbar thumb body color */\n\n    --invalid: 0 90% 71%; /* Invalid state color - red */\n\n    --danger: 345 77% 50%; /* Used for danger variants */\n  }\n\n  /* Dark Mode Vars */\n  .dark {\n    --background: 180 4% 4%; /* Body's bg color */\n    --foreground: 213 31% 91%; /* Default text color */\n\n    --paper: 180 4% 6%; /*  Used for the bg colors of comps */\n\n    --muted: 240 4% 16%; /* Used for big/primary muted blocks */\n    --muted-text: 220 6% 55%; /* Used for faint/disabled els text color */\n\n    --light-text: 240 5% 65%; /* Used for light text such as descriptions */\n\n    --card: 180 4% 4%; /* Used for cards */\n\n    --border-light: 175 4% 13%; /* Used for light borders */\n\n    --separator: 0 0% 24%; /* Used for separators */\n\n    --ring: 175 84% 24%; /* Used for tailwind focus ring */\n\n    --accent: 175 61% 19%; /* Used for selected states, hovered states */\n\n    --scroll-thumb: 0 0% 45%; /* Scrollbar thumb body color */\n  }\n\n  * {\n    @apply border-border-light;\n  }\n\n  body {\n    @apply bg-background text-foreground;\n    font-feature-settings: \"rlig\" 1, \"calt\" 1;\n  }\n}\n\n@layer utilities {\n  .step {\n    counter-increment: step;\n  }\n\n  .step:before {\n    @apply absolute inline-flex h-9 w-9 items-center justify-center rounded-full border-4 border-background bg-muted text-center -indent-px font-mono text-base font-medium;\n    @apply ml-[-50px] mt-[-4px];\n    content: counter(step);\n  }\n}\n","lib/utils.ts":"import { clsx, type ClassValue } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n","tailwind.config.ts":"import { type Config } from \"tailwindcss\";\nimport { fontFamily } from \"tailwindcss/defaultTheme\";\n\nconst directions = [\n  {\n    name: \"Top\",\n    start: {\n      x: 0,\n      y: -100,\n    },\n    end: {\n      x: 0,\n      y: 0,\n    },\n  },\n  {\n    name: \"Bottom\",\n\n    start: {\n      x: 0,\n      y: 100,\n    },\n    end: {\n      x: 0,\n      y: 0,\n    },\n  },\n  {\n    name: \"Left\",\n    start: {\n      x: -100,\n      y: 0,\n    },\n    end: {\n      x: 0,\n      y: 0,\n    },\n  },\n  {\n    name: \"Right\",\n    start: {\n      x: 100,\n      y: 0,\n    },\n    end: {\n      x: 0,\n      y: 0,\n    },\n  },\n];\n\nconst slideAnimations: Record<string, string> = {};\n\nconst slideKeyframes: Record<\n  string,\n  {\n    \"0%\": Record<string, string>;\n    \"100%\": Record<string, string>;\n  }\n> = {};\n\ntype Position = { x: number; y: number };\n\nconst getTranslateProp = ({ x, y }: Position, multipler: number) => {\n  return `${x * multipler}% ${y * multipler}%`;\n};\n\nconst createSlideAnimation = (name: string, start: Position, end: Position, multipler = 1) => {\n  let offsetStr = multipler !== 1 ? `/${multipler * 100}` : \"\";\n  let inName = `slideIn${name}${offsetStr}`;\n  let outName = `slideOut${name}${offsetStr}`;\n\n  slideAnimations[inName] = `${inName} 0.25s ease-in-out forwards`;\n  slideAnimations[outName] = `${outName} 0.2s ease-in-out forwards`;\n\n  const translateStart = getTranslateProp(start, multipler);\n  const translateEnd = getTranslateProp(end, multipler);\n\n  slideKeyframes[inName] = {\n    \"0%\": { translate: translateStart, opacity: \"0\" },\n    \"100%\": { translate: translateEnd, opacity: \"1\" },\n  };\n\n  slideKeyframes[outName] = {\n    \"0%\": { translate: translateEnd, opacity: \"0\" },\n    \"100%\": { translate: translateStart, opacity: \"1\" },\n  };\n};\n\nfor (let direction of directions) {\n  createSlideAnimation(direction.name, direction.start, direction.end);\n  createSlideAnimation(direction.name, direction.start, direction.end, 0.75);\n  createSlideAnimation(direction.name, direction.start, direction.end, 0.5);\n  createSlideAnimation(direction.name, direction.start, direction.end, 0.25);\n  createSlideAnimation(direction.name, direction.start, direction.end, 0.1);\n  createSlideAnimation(direction.name, direction.start, direction.end, 0.05);\n  // Copy paste the above function and change the last param to create a variant\n  // For e.g. to make 15% do createSlideAnimation(direction.name, direction.start, direction.end, 0.15);\n}\n\nexport default {\n  content: [\n    \"./app/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./pages/**/*.{js,ts,jsx,tsx,mdx}\",\n    \"./components/**/*.{js,ts,jsx,tsx,mdx}\",\n\n    // Or if using `src` directory:\n    \"./src/**/*.{js,ts,jsx,tsx,mdx}\",\n  ],\n  theme: {\n    extend: {\n      colors: {\n        background: \"hsl(var(--background))\",\n        foreground: \"hsl(var(--foreground))\",\n        paper: \"hsl(var(--paper))\",\n        muted: \"hsl(var(--muted))\",\n        \"muted-text\": \"hsl(var(--muted-text))\",\n        \"light-text\": \"hsl(var(--light-text))\",\n        card: \"hsl(var(--card))\",\n        primary: \"hsl(var(--primary))\",\n        border: \"hsl(var(--border))\",\n        \"border-light\": \"hsl(var(--border-light))\",\n        separator: \"hsl(var(--separator))\",\n        ring: \"hsl(var(--ring))\",\n        accent: \"hsl(var(--accent))\",\n        \"scroll-thumb\": \"hsl(var(--scroll-thumb))\",\n        invalid: \"hsl(var(--invalid))\",\n        danger: \"hsl(var(--danger))\",\n      },\n\n      animation: {\n        fadeIn: \"fadeIn 0.25s ease-in-out forwards\",\n        fadeOut: \"fadeOut 0.2s ease-in-out forwards\",\n        zoomIn: \"zoomIn 0.25s ease-in-out forwards\",\n        zoomOut: \"zoomOut 0.2s ease-in-out forwards\",\n        accordionDown: \"accordionDown 0.25s ease-in-out\",\n        accordionUp: \"accordionUp 0.2s ease-in-out\",\n        collapsibleDown: \"collapsibleDown 0.25s ease-in-out\",\n        collapsibleUp: \"collapsibleUp 0.2s ease-in-out\",\n        fadeOut0: \"fadeOut 0s ease forwards\",\n        ...slideAnimations,\n      },\n      keyframes: {\n        fadeIn: {\n          \"0%\": { opacity: \"0\" },\n          \"100%\": { opacity: \"1\" },\n        },\n        fadeOut: {\n          \"0%\": { opacity: \"1\" },\n          \"100%\": { opacity: \"0\" },\n        },\n        zoomIn: {\n          \"0%\": { opacity: \"0\", scale: \"0.85\" },\n          \"100%\": { opacity: \"1\", scale: \"1\" },\n        },\n        zoomOut: {\n          \"100%\": { opacity: \"0\", scale: \"0.85\" },\n          \"0%\": { opacity: \"1\", scale: \"1\" },\n        },\n        accordionDown: {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-accordion-content-height)\" },\n        },\n        accordionUp: {\n          from: { height: \"var(--radix-accordion-content-height)\" },\n          to: { height: \"0\" },\n        },\n        collapsibleDown: {\n          from: { height: \"0\" },\n          to: { height: \"var(--radix-collapsible-content-height)\" },\n        },\n        collapsibleUp: {\n          from: { height: \"var(--radix-collapsible-content-height)\" },\n          to: { height: \"0\" },\n        },\n        ...slideKeyframes,\n      },\n      zIndex: {\n        \"dialog-backdrop\": \"49\", //Dialog overlay/backdrop. Also applies to Sheet comp.\n        dialog: \"50\", //Dialog portal and the content inside it. Also applies to Sheet comp.\n      },\n      fontFamily: {\n        sans: [\"var(--font-sans)\", ...fontFamily.sans],\n      },\n    },\n  },\n  plugins: [],\n  darkMode: \"class\",\n} satisfies Config;\n"}